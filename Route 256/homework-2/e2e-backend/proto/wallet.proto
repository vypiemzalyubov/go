syntax = "proto3";

package wallet;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "gitlab.ozon.dev/route256/wallet;wallet";

service Wallet{
  // Создать пользователя
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/api/v1/users"
      body: "*"
    };
  }

  // Повысить уровень идентификации пользователя
  rpc UpgradeUser(UpgradeUserRequest) returns (UpgradeUserResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Token"
          value: {}
        }
      }
    };
    option (google.api.http) = {
      post: "/api/v1/users/{user_id}/upgrade"
      body: "*"
    };
  }

  // Получить инфу по пользователю
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Token"
          value: {}
        }
      }
    };
    option (google.api.http) = {
      get: "/api/v1/users/{user_id}"
    };
  }

  // Авторизация
  rpc LogIn(LogInRequest) returns (LogInResponse) {
    option (google.api.http) = {
      post: "/api/v1/login"
      body: "*"
    };
  }

  //  Создать счет
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Token"
          value: {}
        }
      }
    };
    option (google.api.http) = {
      post: "/api/v1/users/{user_id}/accounts"
      body: "*"
    };
  }
  //  Получить инфу по балансу
  rpc GetAccountBalance(GetAccountBalanceRequest) returns (AccountBalanceResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Token"
          value: {}
        }
      }
    };
    option (google.api.http) = {
      get: "/api/v1/users/{user_id}/accounts/{accountId}/balance"
    };
  }
  //  Поступление денег
  rpc Debit(DebitRequest) returns (DebitResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Token"
          value: {}
        }
      }
    };
    option (google.api.http) = {
      post: "/api/v1/users/{user_id}/accounts/{accountId}/debit"
      body: "*"
    };
  }

  //  Списание денег
  rpc Credit(CreditRequest) returns (CreditResponse) {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "Token"
          value: {}
        }
      }
    };
    option (google.api.http) = {
      post: "/api/v1/users/{user_id}/accounts/{accountId}/credit"
      body: "*"
    };
  }
}

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  security_definitions: {
    security: {
      key: "Token";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "Authorization";
      }
    }
  };
};

enum IdentificationLevel {
  ANON = 0;
  FULL = 1;
}

message User {
  string id = 1;
  string name = 2;
  string lastname = 3;
  int32 age = 4;
  string phone = 5;
  IdentificationLevel identification_level = 6;
}

message CreateUserRequest{
  string name = 1;
  string lastname = 2;
  int32 age = 3;
  string phone = 4;
  string password = 5;
}

message CreateUserResponse{
  User info = 1;
}

message GetUserRequest{
  string user_id = 1;
}

message GetUserResponse{
  User info = 1;
}

message UpgradeUserRequest{
  string user_id = 1;
}

message UpgradeUserResponse{}

message LogInRequest{
  string phone = 1;
  string password = 2;
}

message LogInResponse {
  string token = 1;
}

message CreateAccountRequest{
  string user_id = 1;
  string description = 2;
  int32 amount = 3;
}


message CreateAccountResponse{
  string description = 1;
  string accountId = 2;
  int32 amount = 3;
}

message GetAccountBalanceRequest{
  string user_id = 1;
  string accountId = 2;
}

message AccountBalanceResponse{
  string accountId = 1;
  int32 amount = 2;
}

enum OperationStatus{
  STATUS_UNDEFINED = 0;
  STATUS_OK = 1;
  STATUS_FAIL = 2;
}

message DebitRequest{
  string user_id = 1;
  string accountId = 2;
  int32 amount = 3;
  string operationId = 4;
}

message DebitResponse{
    OperationStatus status = 1;
}

message CreditRequest{
  string user_id = 1;
  string accountId = 2;
  int32 amount = 3;
  string operationId = 4;
}

message CreditResponse{
    OperationStatus status = 1;
}