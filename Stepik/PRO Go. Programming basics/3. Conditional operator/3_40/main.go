// Сегодня Артур ждёт в гости своего друга Давида. Чтобы подготовиться к встрече, Артуру необходимо посетить два магазина, расположенных рядом с его домом.
// От дома до первого магазина ведёт дорожка длины d1 метров, а до второго магазина ведёт дорожка длины d2 метров.
// Также существует дорожка, непосредственно соединяющая два магазина друг с другом, длиной d3 метров.
// Помогите Артуру вычислить минимальное расстояние, которое ему потребуется пройти, чтобы посетить оба магазина и вернуться домой.
// Артур всегда стартует дома. Он должен посетить оба магазина, перемещаясь только по имеющимся трём дорожкам, и вернуться назад домой.
// При этом его совершенно не смутит, если ему придётся посетить один и тот же магазин или пройти по одной и той же дорожке более одного раза.
// Единственная его задача — минимизировать суммарное пройденное расстояние.
//
// Входные данные
// Даны три целых числа d1, d2, d3 (1 ≤ d1, d2, d3 ≤ 10**8) — длины дорожек:
// - d1 — длина дорожки, соединяющей дом Артура и первый магазин;
// - d2 — длина дорожки, соединяющей дом Артура и второй магазин;
// - d3 — длина дорожки, соединяющей два магазина.
//
// Выходные данные
// Выведите минимальное количество метров, которое придётся пройти Артуру, чтобы посетить оба магазина и вернуться домой.

package main

import (
	"fmt"
)

func main() {
	var d1, d2, d3 int
	fmt.Scan(&d1, &d2, &d3)

	if d1+d2 < d3 {
		fmt.Print(d1*2 + d2*2)
	} else if max(d1, d2) > min(d1, d2)+d3 {
		fmt.Print(min(d1, d2)*2 + d3*2)
	} else {
		fmt.Print(d1 + d2 + d3)
	}
}
